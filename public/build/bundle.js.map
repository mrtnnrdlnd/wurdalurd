{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Filters.ts","../../src/wordsLengthFive.js","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export class Filters {\r\n    static noFilter(word: string, letter:string, position: number): boolean {\r\n        return true;\r\n    }\r\n\r\n    static notInWord(word: string, letter:string, position: number) {\r\n        return !word.includes(letter.charAt(0));\r\n    }\r\n\r\n    static wrongPosition(word: string, letter:string, position: number) {\r\n        return word.includes(letter.charAt(0)) && word.charAt(position) != letter.charAt(0);\r\n    }\r\n\r\n    static rightPosition(word: string, letter:string, position: number) {\r\n        return word.charAt(position) == letter.charAt(0);\r\n    }\r\n}","export const wordsLengthFive = [\r\n    \"aback\",\r\n    \"abase\",\r\n    \"abate\",\r\n    \"abbey\",\r\n    \"abbot\",\r\n    \"abhor\",\r\n    \"abide\",\r\n    \"abled\",\r\n    \"abode\",\r\n    \"abort\",\r\n    \"about\",\r\n    \"above\",\r\n    \"abuse\",\r\n    \"abyss\",\r\n    \"acorn\",\r\n    \"acrid\",\r\n    \"actor\",\r\n    \"acute\",\r\n    \"adage\",\r\n    \"adapt\",\r\n    \"adept\",\r\n    \"admin\",\r\n    \"admit\",\r\n    \"adobe\",\r\n    \"adopt\",\r\n    \"adore\",\r\n    \"adorn\",\r\n    \"adult\",\r\n    \"affix\",\r\n    \"afire\",\r\n    \"afoot\",\r\n    \"afoul\",\r\n    \"after\",\r\n    \"again\",\r\n    \"agape\",\r\n    \"agate\",\r\n    \"agent\",\r\n    \"agile\",\r\n    \"aging\",\r\n    \"aglow\",\r\n    \"agony\",\r\n    \"agree\",\r\n    \"ahead\",\r\n    \"aider\",\r\n    \"aisle\",\r\n    \"alarm\",\r\n    \"album\",\r\n    \"alert\",\r\n    \"algae\",\r\n    \"alibi\",\r\n    \"alien\",\r\n    \"align\",\r\n    \"alike\",\r\n    \"alive\",\r\n    \"allay\",\r\n    \"alley\",\r\n    \"allot\",\r\n    \"allow\",\r\n    \"alloy\",\r\n    \"aloft\",\r\n    \"alone\",\r\n    \"along\",\r\n    \"aloof\",\r\n    \"aloud\",\r\n    \"alpha\",\r\n    \"altar\",\r\n    \"alter\",\r\n    \"amass\",\r\n    \"amaze\",\r\n    \"amber\",\r\n    \"amble\",\r\n    \"amend\",\r\n    \"amiss\",\r\n    \"amity\",\r\n    \"among\",\r\n    \"ample\",\r\n    \"amply\",\r\n    \"amuse\",\r\n    \"angel\",\r\n    \"anger\",\r\n    \"angle\",\r\n    \"angry\",\r\n    \"angst\",\r\n    \"anime\",\r\n    \"ankle\",\r\n    \"annex\",\r\n    \"annoy\",\r\n    \"annul\",\r\n    \"anode\",\r\n    \"antic\",\r\n    \"anvil\",\r\n    \"aorta\",\r\n    \"apart\",\r\n    \"aphid\",\r\n    \"aping\",\r\n    \"apnea\",\r\n    \"apple\",\r\n    \"apply\",\r\n    \"apron\",\r\n    \"aptly\",\r\n    \"arbor\",\r\n    \"ardor\",\r\n    \"arena\",\r\n    \"argue\",\r\n    \"arise\",\r\n    \"armor\",\r\n    \"aroma\",\r\n    \"arose\",\r\n    \"array\",\r\n    \"arrow\",\r\n    \"arson\",\r\n    \"artsy\",\r\n    \"ascot\",\r\n    \"ashen\",\r\n    \"aside\",\r\n    \"askew\",\r\n    \"assay\",\r\n    \"asset\",\r\n    \"atoll\",\r\n    \"atone\",\r\n    \"attic\",\r\n    \"audio\",\r\n    \"audit\",\r\n    \"augur\",\r\n    \"aunty\",\r\n    \"avail\",\r\n    \"avert\",\r\n    \"avian\",\r\n    \"avoid\",\r\n    \"await\",\r\n    \"awake\",\r\n    \"award\",\r\n    \"aware\",\r\n    \"awash\",\r\n    \"awful\",\r\n    \"awoke\",\r\n    \"axial\",\r\n    \"axiom\",\r\n    \"axion\",\r\n    \"azure\",\r\n    \"bacon\",\r\n    \"badge\",\r\n    \"badly\",\r\n    \"bagel\",\r\n    \"baggy\",\r\n    \"baker\",\r\n    \"baler\",\r\n    \"balmy\",\r\n    \"banal\",\r\n    \"banjo\",\r\n    \"barge\",\r\n    \"baron\",\r\n    \"basal\",\r\n    \"basic\",\r\n    \"basil\",\r\n    \"basin\",\r\n    \"basis\",\r\n    \"baste\",\r\n    \"batch\",\r\n    \"bathe\",\r\n    \"baton\",\r\n    \"batty\",\r\n    \"bawdy\",\r\n    \"bayou\",\r\n    \"beach\",\r\n    \"beady\",\r\n    \"beard\",\r\n    \"beast\",\r\n    \"beech\",\r\n    \"beefy\",\r\n    \"befit\",\r\n    \"began\",\r\n    \"begat\",\r\n    \"beget\",\r\n    \"begin\",\r\n    \"begun\",\r\n    \"being\",\r\n    \"belch\",\r\n    \"belie\",\r\n    \"belle\",\r\n    \"belly\",\r\n    \"below\",\r\n    \"bench\",\r\n    \"beret\",\r\n    \"berry\",\r\n    \"berth\",\r\n    \"beset\",\r\n    \"betel\",\r\n    \"bevel\",\r\n    \"bezel\",\r\n    \"bible\",\r\n    \"bicep\",\r\n    \"biddy\",\r\n    \"bigot\",\r\n    \"bilge\",\r\n    \"billy\",\r\n    \"binge\",\r\n    \"bingo\",\r\n    \"biome\",\r\n    \"birch\",\r\n    \"birth\",\r\n    \"bison\",\r\n    \"bitty\",\r\n    \"black\",\r\n    \"blade\",\r\n    \"blame\",\r\n    \"bland\",\r\n    \"blank\",\r\n    \"blare\",\r\n    \"blast\",\r\n    \"blaze\",\r\n    \"bleak\",\r\n    \"bleat\",\r\n    \"bleed\",\r\n    \"bleep\",\r\n    \"blend\",\r\n    \"bless\",\r\n    \"blimp\",\r\n    \"blind\",\r\n    \"blink\",\r\n    \"bliss\",\r\n    \"blitz\",\r\n    \"bloat\",\r\n    \"block\",\r\n    \"bloke\",\r\n    \"blond\",\r\n    \"blood\",\r\n    \"bloom\",\r\n    \"blown\",\r\n    \"bluer\",\r\n    \"bluff\",\r\n    \"blunt\",\r\n    \"blurb\",\r\n    \"blurt\",\r\n    \"blush\",\r\n    \"board\",\r\n    \"boast\",\r\n    \"bobby\",\r\n    \"boney\",\r\n    \"bongo\",\r\n    \"bonus\",\r\n    \"booby\",\r\n    \"boost\",\r\n    \"booth\",\r\n    \"booty\",\r\n    \"booze\",\r\n    \"boozy\",\r\n    \"borax\",\r\n    \"borne\",\r\n    \"bosom\",\r\n    \"bossy\",\r\n    \"botch\",\r\n    \"bough\",\r\n    \"boule\",\r\n    \"bound\",\r\n    \"bowel\",\r\n    \"boxer\",\r\n    \"brace\",\r\n    \"braid\",\r\n    \"brain\",\r\n    \"brake\",\r\n    \"brand\",\r\n    \"brash\",\r\n    \"brass\",\r\n    \"brave\",\r\n    \"bravo\",\r\n    \"brawl\",\r\n    \"brawn\",\r\n    \"bread\",\r\n    \"break\",\r\n    \"breed\",\r\n    \"briar\",\r\n    \"bribe\",\r\n    \"brick\",\r\n    \"bride\",\r\n    \"brief\",\r\n    \"brine\",\r\n    \"bring\",\r\n    \"brink\",\r\n    \"briny\",\r\n    \"brisk\",\r\n    \"broad\",\r\n    \"broil\",\r\n    \"broke\",\r\n    \"brood\",\r\n    \"brook\",\r\n    \"broom\",\r\n    \"broth\",\r\n    \"brown\",\r\n    \"brunt\",\r\n    \"brush\",\r\n    \"brute\",\r\n    \"buddy\",\r\n    \"budge\",\r\n    \"buggy\",\r\n    \"bugle\",\r\n    \"build\",\r\n    \"built\",\r\n    \"bulge\",\r\n    \"bulky\",\r\n    \"bully\",\r\n    \"bunch\",\r\n    \"bunny\",\r\n    \"burly\",\r\n    \"burnt\",\r\n    \"burst\",\r\n    \"bused\",\r\n    \"bushy\",\r\n    \"butch\",\r\n    \"butte\",\r\n    \"buxom\",\r\n    \"buyer\",\r\n    \"bylaw\",\r\n    \"cabal\",\r\n    \"cabby\",\r\n    \"cabin\",\r\n    \"cable\",\r\n    \"cacao\",\r\n    \"cache\",\r\n    \"cacti\",\r\n    \"caddy\",\r\n    \"cadet\",\r\n    \"cagey\",\r\n    \"cairn\",\r\n    \"camel\",\r\n    \"cameo\",\r\n    \"canal\",\r\n    \"candy\",\r\n    \"canny\",\r\n    \"canoe\",\r\n    \"canon\",\r\n    \"caper\",\r\n    \"caput\",\r\n    \"carat\",\r\n    \"cargo\",\r\n    \"carol\",\r\n    \"carry\",\r\n    \"carve\",\r\n    \"caste\",\r\n    \"catch\",\r\n    \"cater\",\r\n    \"catty\",\r\n    \"caulk\",\r\n    \"cause\",\r\n    \"cavil\",\r\n    \"cease\",\r\n    \"cedar\",\r\n    \"cello\",\r\n    \"chafe\",\r\n    \"chaff\",\r\n    \"chain\",\r\n    \"chair\",\r\n    \"chalk\",\r\n    \"champ\",\r\n    \"chant\",\r\n    \"chaos\",\r\n    \"chard\",\r\n    \"charm\",\r\n    \"chart\",\r\n    \"chase\",\r\n    \"chasm\",\r\n    \"cheap\",\r\n    \"cheat\",\r\n    \"check\",\r\n    \"cheek\",\r\n    \"cheer\",\r\n    \"chess\",\r\n    \"chest\",\r\n    \"chick\",\r\n    \"chide\",\r\n    \"chief\",\r\n    \"child\",\r\n    \"chili\",\r\n    \"chill\",\r\n    \"chime\",\r\n    \"china\",\r\n    \"chirp\",\r\n    \"chock\",\r\n    \"choir\",\r\n    \"choke\",\r\n    \"chord\",\r\n    \"chore\",\r\n    \"chose\",\r\n    \"chuck\",\r\n    \"chump\",\r\n    \"chunk\",\r\n    \"churn\",\r\n    \"chute\",\r\n    \"cider\",\r\n    \"cigar\",\r\n    \"cinch\",\r\n    \"circa\",\r\n    \"civic\",\r\n    \"civil\",\r\n    \"clack\",\r\n    \"claim\",\r\n    \"clamp\",\r\n    \"clang\",\r\n    \"clank\",\r\n    \"clash\",\r\n    \"clasp\",\r\n    \"class\",\r\n    \"clean\",\r\n    \"clear\",\r\n    \"cleat\",\r\n    \"cleft\",\r\n    \"clerk\",\r\n    \"click\",\r\n    \"cliff\",\r\n    \"climb\",\r\n    \"cling\",\r\n    \"clink\",\r\n    \"cloak\",\r\n    \"clock\",\r\n    \"clone\",\r\n    \"close\",\r\n    \"cloth\",\r\n    \"cloud\",\r\n    \"clout\",\r\n    \"clove\",\r\n    \"clown\",\r\n    \"cluck\",\r\n    \"clued\",\r\n    \"clump\",\r\n    \"clung\",\r\n    \"coach\",\r\n    \"coast\",\r\n    \"cobra\",\r\n    \"cocoa\",\r\n    \"colon\",\r\n    \"color\",\r\n    \"comet\",\r\n    \"comfy\",\r\n    \"comic\",\r\n    \"comma\",\r\n    \"conch\",\r\n    \"condo\",\r\n    \"conic\",\r\n    \"copse\",\r\n    \"coral\",\r\n    \"corer\",\r\n    \"corny\",\r\n    \"couch\",\r\n    \"cough\",\r\n    \"could\",\r\n    \"count\",\r\n    \"coupe\",\r\n    \"court\",\r\n    \"coven\",\r\n    \"cover\",\r\n    \"covet\",\r\n    \"covey\",\r\n    \"cower\",\r\n    \"coyly\",\r\n    \"crack\",\r\n    \"craft\",\r\n    \"cramp\",\r\n    \"crane\",\r\n    \"crank\",\r\n    \"crash\",\r\n    \"crass\",\r\n    \"crate\",\r\n    \"crave\",\r\n    \"crawl\",\r\n    \"craze\",\r\n    \"crazy\",\r\n    \"creak\",\r\n    \"cream\",\r\n    \"credo\",\r\n    \"creed\",\r\n    \"creek\",\r\n    \"creep\",\r\n    \"creme\",\r\n    \"crepe\",\r\n    \"crept\",\r\n    \"cress\",\r\n    \"crest\",\r\n    \"crick\",\r\n    \"cried\",\r\n    \"crier\",\r\n    \"crime\",\r\n    \"crimp\",\r\n    \"crisp\",\r\n    \"croak\",\r\n    \"crock\",\r\n    \"crone\",\r\n    \"crony\",\r\n    \"crook\",\r\n    \"cross\",\r\n    \"croup\",\r\n    \"crowd\",\r\n    \"crown\",\r\n    \"crude\",\r\n    \"cruel\",\r\n    \"crumb\",\r\n    \"crump\",\r\n    \"crush\",\r\n    \"crust\",\r\n    \"crypt\",\r\n    \"cubic\",\r\n    \"cumin\",\r\n    \"curio\",\r\n    \"curly\",\r\n    \"curry\",\r\n    \"curse\",\r\n    \"curve\",\r\n    \"curvy\",\r\n    \"cutie\",\r\n    \"cyber\",\r\n    \"cycle\",\r\n    \"cynic\",\r\n    \"daddy\",\r\n    \"daily\",\r\n    \"dairy\",\r\n    \"daisy\",\r\n    \"dally\",\r\n    \"dance\",\r\n    \"dandy\",\r\n    \"datum\",\r\n    \"daunt\",\r\n    \"dealt\",\r\n    \"death\",\r\n    \"debar\",\r\n    \"debit\",\r\n    \"debug\",\r\n    \"debut\",\r\n    \"decal\",\r\n    \"decay\",\r\n    \"decor\",\r\n    \"decoy\",\r\n    \"decry\",\r\n    \"defer\",\r\n    \"deign\",\r\n    \"deity\",\r\n    \"delay\",\r\n    \"delta\",\r\n    \"delve\",\r\n    \"demon\",\r\n    \"demur\",\r\n    \"denim\",\r\n    \"dense\",\r\n    \"depot\",\r\n    \"depth\",\r\n    \"derby\",\r\n    \"deter\",\r\n    \"detox\",\r\n    \"deuce\",\r\n    \"devil\",\r\n    \"diary\",\r\n    \"dicey\",\r\n    \"digit\",\r\n    \"dilly\",\r\n    \"dimly\",\r\n    \"diner\",\r\n    \"dingo\",\r\n    \"dingy\",\r\n    \"diode\",\r\n    \"dirge\",\r\n    \"dirty\",\r\n    \"disco\",\r\n    \"ditch\",\r\n    \"ditto\",\r\n    \"ditty\",\r\n    \"diver\",\r\n    \"dizzy\",\r\n    \"dodge\",\r\n    \"dodgy\",\r\n    \"dogma\",\r\n    \"doing\",\r\n    \"dolly\",\r\n    \"donor\",\r\n    \"donut\",\r\n    \"dopey\",\r\n    \"doubt\",\r\n    \"dough\",\r\n    \"dowdy\",\r\n    \"dowel\",\r\n    \"downy\",\r\n    \"dowry\",\r\n    \"dozen\",\r\n    \"draft\",\r\n    \"drain\",\r\n    \"drake\",\r\n    \"drama\",\r\n    \"drank\",\r\n    \"drape\",\r\n    \"drawl\",\r\n    \"drawn\",\r\n    \"dread\",\r\n    \"dream\",\r\n    \"dress\",\r\n    \"dried\",\r\n    \"drier\",\r\n    \"drift\",\r\n    \"drill\",\r\n    \"drink\",\r\n    \"drive\",\r\n    \"droit\",\r\n    \"droll\",\r\n    \"drone\",\r\n    \"drool\",\r\n    \"droop\",\r\n    \"dross\",\r\n    \"drove\",\r\n    \"drown\",\r\n    \"druid\",\r\n    \"drunk\",\r\n    \"dryer\",\r\n    \"dryly\",\r\n    \"duchy\",\r\n    \"dully\",\r\n    \"dummy\",\r\n    \"dumpy\",\r\n    \"dunce\",\r\n    \"dusky\",\r\n    \"dusty\",\r\n    \"dutch\",\r\n    \"duvet\",\r\n    \"dwarf\",\r\n    \"dwell\",\r\n    \"dwelt\",\r\n    \"dying\",\r\n    \"eager\",\r\n    \"eagle\",\r\n    \"early\",\r\n    \"earth\",\r\n    \"easel\",\r\n    \"eaten\",\r\n    \"eater\",\r\n    \"ebony\",\r\n    \"eclat\",\r\n    \"edict\",\r\n    \"edify\",\r\n    \"eerie\",\r\n    \"egret\",\r\n    \"eight\",\r\n    \"eject\",\r\n    \"eking\",\r\n    \"elate\",\r\n    \"elbow\",\r\n    \"elder\",\r\n    \"elect\",\r\n    \"elegy\",\r\n    \"elfin\",\r\n    \"elide\",\r\n    \"elite\",\r\n    \"elope\",\r\n    \"elude\",\r\n    \"email\",\r\n    \"embed\",\r\n    \"ember\",\r\n    \"emcee\",\r\n    \"empty\",\r\n    \"enact\",\r\n    \"endow\",\r\n    \"enema\",\r\n    \"enemy\",\r\n    \"enjoy\",\r\n    \"ennui\",\r\n    \"ensue\",\r\n    \"enter\",\r\n    \"entry\",\r\n    \"envoy\",\r\n    \"epoch\",\r\n    \"epoxy\",\r\n    \"equal\",\r\n    \"equip\",\r\n    \"erase\",\r\n    \"erect\",\r\n    \"erode\",\r\n    \"error\",\r\n    \"erupt\",\r\n    \"essay\",\r\n    \"ester\",\r\n    \"ether\",\r\n    \"ethic\",\r\n    \"ethos\",\r\n    \"etude\",\r\n    \"evade\",\r\n    \"event\",\r\n    \"every\",\r\n    \"evict\",\r\n    \"evoke\",\r\n    \"exact\",\r\n    \"exalt\",\r\n    \"excel\",\r\n    \"exert\",\r\n    \"exile\",\r\n    \"exist\",\r\n    \"expel\",\r\n    \"extol\",\r\n    \"extra\",\r\n    \"exult\",\r\n    \"eying\",\r\n    \"fable\",\r\n    \"facet\",\r\n    \"faint\",\r\n    \"fairy\",\r\n    \"faith\",\r\n    \"false\",\r\n    \"fancy\",\r\n    \"fanny\",\r\n    \"farce\",\r\n    \"fatal\",\r\n    \"fatty\",\r\n    \"fault\",\r\n    \"fauna\",\r\n    \"favor\",\r\n    \"feast\",\r\n    \"fecal\",\r\n    \"feign\",\r\n    \"fella\",\r\n    \"felon\",\r\n    \"femme\",\r\n    \"femur\",\r\n    \"fence\",\r\n    \"feral\",\r\n    \"ferry\",\r\n    \"fetal\",\r\n    \"fetch\",\r\n    \"fetid\",\r\n    \"fetus\",\r\n    \"fever\",\r\n    \"fewer\",\r\n    \"fiber\",\r\n    \"ficus\",\r\n    \"field\",\r\n    \"fiend\",\r\n    \"fiery\",\r\n    \"fifth\",\r\n    \"fifty\",\r\n    \"fight\",\r\n    \"filer\",\r\n    \"filet\",\r\n    \"filly\",\r\n    \"filmy\",\r\n    \"filth\",\r\n    \"final\",\r\n    \"finch\",\r\n    \"finer\",\r\n    \"first\",\r\n    \"fishy\",\r\n    \"fixer\",\r\n    \"fizzy\",\r\n    \"fjord\",\r\n    \"flack\",\r\n    \"flail\",\r\n    \"flair\",\r\n    \"flake\",\r\n    \"flaky\",\r\n    \"flame\",\r\n    \"flank\",\r\n    \"flare\",\r\n    \"flash\",\r\n    \"flask\",\r\n    \"fleck\",\r\n    \"fleet\",\r\n    \"flesh\",\r\n    \"flick\",\r\n    \"flier\",\r\n    \"fling\",\r\n    \"flint\",\r\n    \"flirt\",\r\n    \"float\",\r\n    \"flock\",\r\n    \"flood\",\r\n    \"floor\",\r\n    \"flora\",\r\n    \"floss\",\r\n    \"flour\",\r\n    \"flout\",\r\n    \"flown\",\r\n    \"fluff\",\r\n    \"fluid\",\r\n    \"fluke\",\r\n    \"flume\",\r\n    \"flung\",\r\n    \"flunk\",\r\n    \"flush\",\r\n    \"flute\",\r\n    \"flyer\",\r\n    \"foamy\",\r\n    \"focal\",\r\n    \"focus\",\r\n    \"foggy\",\r\n    \"foist\",\r\n    \"folio\",\r\n    \"folly\",\r\n    \"foray\",\r\n    \"force\",\r\n    \"forge\",\r\n    \"forgo\",\r\n    \"forte\",\r\n    \"forth\",\r\n    \"forty\",\r\n    \"forum\",\r\n    \"found\",\r\n    \"foyer\",\r\n    \"frail\",\r\n    \"frame\",\r\n    \"frank\",\r\n    \"fraud\",\r\n    \"freak\",\r\n    \"freed\",\r\n    \"freer\",\r\n    \"fresh\",\r\n    \"friar\",\r\n    \"fried\",\r\n    \"frill\",\r\n    \"frisk\",\r\n    \"fritz\",\r\n    \"frock\",\r\n    \"frond\",\r\n    \"front\",\r\n    \"frost\",\r\n    \"froth\",\r\n    \"frown\",\r\n    \"froze\",\r\n    \"fruit\",\r\n    \"fudge\",\r\n    \"fugue\",\r\n    \"fully\",\r\n    \"fungi\",\r\n    \"funky\",\r\n    \"funny\",\r\n    \"furor\",\r\n    \"furry\",\r\n    \"fussy\",\r\n    \"fuzzy\",\r\n    \"gaffe\",\r\n    \"gaily\",\r\n    \"gamer\",\r\n    \"gamma\",\r\n    \"gamut\",\r\n    \"gassy\",\r\n    \"gaudy\",\r\n    \"gauge\",\r\n    \"gaunt\",\r\n    \"gauze\",\r\n    \"gavel\",\r\n    \"gawky\",\r\n    \"gayer\",\r\n    \"gayly\",\r\n    \"gazer\",\r\n    \"gecko\",\r\n    \"geeky\",\r\n    \"geese\",\r\n    \"genie\",\r\n    \"genre\",\r\n    \"ghost\",\r\n    \"ghoul\",\r\n    \"giant\",\r\n    \"giddy\",\r\n    \"gipsy\",\r\n    \"girly\",\r\n    \"girth\",\r\n    \"given\",\r\n    \"giver\",\r\n    \"glade\",\r\n    \"gland\",\r\n    \"glare\",\r\n    \"glass\",\r\n    \"glaze\",\r\n    \"gleam\",\r\n    \"glean\",\r\n    \"glide\",\r\n    \"glint\",\r\n    \"gloat\",\r\n    \"globe\",\r\n    \"gloom\",\r\n    \"glory\",\r\n    \"gloss\",\r\n    \"glove\",\r\n    \"glyph\",\r\n    \"gnash\",\r\n    \"gnome\",\r\n    \"godly\",\r\n    \"going\",\r\n    \"golem\",\r\n    \"golly\",\r\n    \"gonad\",\r\n    \"goner\",\r\n    \"goody\",\r\n    \"gooey\",\r\n    \"goofy\",\r\n    \"goose\",\r\n    \"gorge\",\r\n    \"gouge\",\r\n    \"gourd\",\r\n    \"grace\",\r\n    \"grade\",\r\n    \"graft\",\r\n    \"grail\",\r\n    \"grain\",\r\n    \"grand\",\r\n    \"grant\",\r\n    \"grape\",\r\n    \"graph\",\r\n    \"grasp\",\r\n    \"grass\",\r\n    \"grate\",\r\n    \"grave\",\r\n    \"gravy\",\r\n    \"graze\",\r\n    \"great\",\r\n    \"greed\",\r\n    \"green\",\r\n    \"greet\",\r\n    \"grief\",\r\n    \"grill\",\r\n    \"grime\",\r\n    \"grimy\",\r\n    \"grind\",\r\n    \"gripe\",\r\n    \"groan\",\r\n    \"groin\",\r\n    \"groom\",\r\n    \"grope\",\r\n    \"gross\",\r\n    \"group\",\r\n    \"grout\",\r\n    \"grove\",\r\n    \"growl\",\r\n    \"grown\",\r\n    \"gruel\",\r\n    \"gruff\",\r\n    \"grunt\",\r\n    \"guard\",\r\n    \"guava\",\r\n    \"guess\",\r\n    \"guest\",\r\n    \"guide\",\r\n    \"guild\",\r\n    \"guile\",\r\n    \"guilt\",\r\n    \"guise\",\r\n    \"gulch\",\r\n    \"gully\",\r\n    \"gumbo\",\r\n    \"gummy\",\r\n    \"guppy\",\r\n    \"gusto\",\r\n    \"gusty\",\r\n    \"gypsy\",\r\n    \"habit\",\r\n    \"hairy\",\r\n    \"halve\",\r\n    \"handy\",\r\n    \"happy\",\r\n    \"hardy\",\r\n    \"harem\",\r\n    \"harpy\",\r\n    \"harry\",\r\n    \"harsh\",\r\n    \"haste\",\r\n    \"hasty\",\r\n    \"hatch\",\r\n    \"hater\",\r\n    \"haunt\",\r\n    \"haute\",\r\n    \"haven\",\r\n    \"havoc\",\r\n    \"hazel\",\r\n    \"heady\",\r\n    \"heard\",\r\n    \"heart\",\r\n    \"heath\",\r\n    \"heave\",\r\n    \"heavy\",\r\n    \"hedge\",\r\n    \"hefty\",\r\n    \"heist\",\r\n    \"helix\",\r\n    \"hello\",\r\n    \"hence\",\r\n    \"heron\",\r\n    \"hilly\",\r\n    \"hinge\",\r\n    \"hippo\",\r\n    \"hippy\",\r\n    \"hitch\",\r\n    \"hoard\",\r\n    \"hobby\",\r\n    \"hoist\",\r\n    \"holly\",\r\n    \"homer\",\r\n    \"honey\",\r\n    \"honor\",\r\n    \"horde\",\r\n    \"horny\",\r\n    \"horse\",\r\n    \"hotel\",\r\n    \"hotly\",\r\n    \"hound\",\r\n    \"house\",\r\n    \"hovel\",\r\n    \"hover\",\r\n    \"howdy\",\r\n    \"human\",\r\n    \"humid\",\r\n    \"humor\",\r\n    \"humph\",\r\n    \"humus\",\r\n    \"hunch\",\r\n    \"hunky\",\r\n    \"hurry\",\r\n    \"husky\",\r\n    \"hussy\",\r\n    \"hutch\",\r\n    \"hydro\",\r\n    \"hyena\",\r\n    \"hymen\",\r\n    \"hyper\",\r\n    \"icily\",\r\n    \"icing\",\r\n    \"ideal\",\r\n    \"idiom\",\r\n    \"idiot\",\r\n    \"idler\",\r\n    \"idyll\",\r\n    \"igloo\",\r\n    \"iliac\",\r\n    \"image\",\r\n    \"imbue\",\r\n    \"impel\",\r\n    \"imply\",\r\n    \"inane\",\r\n    \"inbox\",\r\n    \"incur\",\r\n    \"index\",\r\n    \"inept\",\r\n    \"inert\",\r\n    \"infer\",\r\n    \"ingot\",\r\n    \"inlay\",\r\n    \"inlet\",\r\n    \"inner\",\r\n    \"input\",\r\n    \"inter\",\r\n    \"intro\",\r\n    \"ionic\",\r\n    \"irate\",\r\n    \"irony\",\r\n    \"islet\",\r\n    \"issue\",\r\n    \"itchy\",\r\n    \"ivory\",\r\n    \"jaunt\",\r\n    \"jazzy\",\r\n    \"jelly\",\r\n    \"jerky\",\r\n    \"jetty\",\r\n    \"jewel\",\r\n    \"jiffy\",\r\n    \"joint\",\r\n    \"joist\",\r\n    \"joker\",\r\n    \"jolly\",\r\n    \"joust\",\r\n    \"judge\",\r\n    \"juice\",\r\n    \"juicy\",\r\n    \"jumbo\",\r\n    \"jumpy\",\r\n    \"junta\",\r\n    \"junto\",\r\n    \"juror\",\r\n    \"kappa\",\r\n    \"karma\",\r\n    \"kayak\",\r\n    \"kebab\",\r\n    \"khaki\",\r\n    \"kinky\",\r\n    \"kiosk\",\r\n    \"kitty\",\r\n    \"knack\",\r\n    \"knave\",\r\n    \"knead\",\r\n    \"kneed\",\r\n    \"kneel\",\r\n    \"knelt\",\r\n    \"knife\",\r\n    \"knock\",\r\n    \"knoll\",\r\n    \"known\",\r\n    \"koala\",\r\n    \"krill\",\r\n    \"label\",\r\n    \"labor\",\r\n    \"laden\",\r\n    \"ladle\",\r\n    \"lager\",\r\n    \"lance\",\r\n    \"lanky\",\r\n    \"lapel\",\r\n    \"lapse\",\r\n    \"large\",\r\n    \"larva\",\r\n    \"lasso\",\r\n    \"latch\",\r\n    \"later\",\r\n    \"lathe\",\r\n    \"latte\",\r\n    \"laugh\",\r\n    \"layer\",\r\n    \"leach\",\r\n    \"leafy\",\r\n    \"leaky\",\r\n    \"leant\",\r\n    \"leapt\",\r\n    \"learn\",\r\n    \"lease\",\r\n    \"leash\",\r\n    \"least\",\r\n    \"leave\",\r\n    \"ledge\",\r\n    \"leech\",\r\n    \"leery\",\r\n    \"lefty\",\r\n    \"legal\",\r\n    \"leggy\",\r\n    \"lemon\",\r\n    \"lemur\",\r\n    \"leper\",\r\n    \"level\",\r\n    \"lever\",\r\n    \"libel\",\r\n    \"liege\",\r\n    \"light\",\r\n    \"liken\",\r\n    \"lilac\",\r\n    \"limbo\",\r\n    \"limit\",\r\n    \"linen\",\r\n    \"liner\",\r\n    \"lingo\",\r\n    \"lipid\",\r\n    \"lithe\",\r\n    \"liver\",\r\n    \"livid\",\r\n    \"llama\",\r\n    \"loamy\",\r\n    \"loath\",\r\n    \"lobby\",\r\n    \"local\",\r\n    \"locus\",\r\n    \"lodge\",\r\n    \"lofty\",\r\n    \"logic\",\r\n    \"login\",\r\n    \"loopy\",\r\n    \"loose\",\r\n    \"lorry\",\r\n    \"loser\",\r\n    \"louse\",\r\n    \"lousy\",\r\n    \"lover\",\r\n    \"lower\",\r\n    \"lowly\",\r\n    \"loyal\",\r\n    \"lucid\",\r\n    \"lucky\",\r\n    \"lumen\",\r\n    \"lumpy\",\r\n    \"lunar\",\r\n    \"lunch\",\r\n    \"lunge\",\r\n    \"lupus\",\r\n    \"lurch\",\r\n    \"lurid\",\r\n    \"lusty\",\r\n    \"lying\",\r\n    \"lymph\",\r\n    \"lyric\",\r\n    \"macaw\",\r\n    \"macho\",\r\n    \"macro\",\r\n    \"madam\",\r\n    \"madly\",\r\n    \"mafia\",\r\n    \"magic\",\r\n    \"magma\",\r\n    \"maize\",\r\n    \"major\",\r\n    \"maker\",\r\n    \"mambo\",\r\n    \"mamma\",\r\n    \"mammy\",\r\n    \"manga\",\r\n    \"mange\",\r\n    \"mango\",\r\n    \"mangy\",\r\n    \"mania\",\r\n    \"manic\",\r\n    \"manly\",\r\n    \"manor\",\r\n    \"maple\",\r\n    \"march\",\r\n    \"marry\",\r\n    \"marsh\",\r\n    \"mason\",\r\n    \"masse\",\r\n    \"match\",\r\n    \"matey\",\r\n    \"mauve\",\r\n    \"maxim\",\r\n    \"maybe\",\r\n    \"mayor\",\r\n    \"mealy\",\r\n    \"meant\",\r\n    \"meaty\",\r\n    \"mecca\",\r\n    \"medal\",\r\n    \"media\",\r\n    \"medic\",\r\n    \"melee\",\r\n    \"melon\",\r\n    \"mercy\",\r\n    \"merge\",\r\n    \"merit\",\r\n    \"merry\",\r\n    \"metal\",\r\n    \"meter\",\r\n    \"metro\",\r\n    \"micro\",\r\n    \"midge\",\r\n    \"midst\",\r\n    \"might\",\r\n    \"milky\",\r\n    \"mimic\",\r\n    \"mince\",\r\n    \"miner\",\r\n    \"minim\",\r\n    \"minor\",\r\n    \"minty\",\r\n    \"minus\",\r\n    \"mirth\",\r\n    \"miser\",\r\n    \"missy\",\r\n    \"mocha\",\r\n    \"modal\",\r\n    \"model\",\r\n    \"modem\",\r\n    \"mogul\",\r\n    \"moist\",\r\n    \"molar\",\r\n    \"moldy\",\r\n    \"money\",\r\n    \"month\",\r\n    \"moody\",\r\n    \"moose\",\r\n    \"moral\",\r\n    \"moron\",\r\n    \"morph\",\r\n    \"mossy\",\r\n    \"motel\",\r\n    \"motif\",\r\n    \"motor\",\r\n    \"motto\",\r\n    \"moult\",\r\n    \"mound\",\r\n    \"mount\",\r\n    \"mourn\",\r\n    \"mouse\",\r\n    \"mouth\",\r\n    \"mover\",\r\n    \"movie\",\r\n    \"mower\",\r\n    \"mucky\",\r\n    \"mucus\",\r\n    \"muddy\",\r\n    \"mulch\",\r\n    \"mummy\",\r\n    \"munch\",\r\n    \"mural\",\r\n    \"murky\",\r\n    \"mushy\",\r\n    \"music\",\r\n    \"musky\",\r\n    \"musty\",\r\n    \"myrrh\",\r\n    \"nadir\",\r\n    \"naive\",\r\n    \"nanny\",\r\n    \"nasal\",\r\n    \"nasty\",\r\n    \"natal\",\r\n    \"naval\",\r\n    \"navel\",\r\n    \"needy\",\r\n    \"neigh\",\r\n    \"nerdy\",\r\n    \"nerve\",\r\n    \"never\",\r\n    \"newer\",\r\n    \"newly\",\r\n    \"nicer\",\r\n    \"niche\",\r\n    \"niece\",\r\n    \"night\",\r\n    \"ninja\",\r\n    \"ninny\",\r\n    \"ninth\",\r\n    \"noble\",\r\n    \"nobly\",\r\n    \"noise\",\r\n    \"noisy\",\r\n    \"nomad\",\r\n    \"noose\",\r\n    \"north\",\r\n    \"nosey\",\r\n    \"notch\",\r\n    \"novel\",\r\n    \"nudge\",\r\n    \"nurse\",\r\n    \"nutty\",\r\n    \"nylon\",\r\n    \"nymph\",\r\n    \"oaken\",\r\n    \"obese\",\r\n    \"occur\",\r\n    \"ocean\",\r\n    \"octal\",\r\n    \"octet\",\r\n    \"odder\",\r\n    \"oddly\",\r\n    \"offal\",\r\n    \"offer\",\r\n    \"often\",\r\n    \"olden\",\r\n    \"older\",\r\n    \"olive\",\r\n    \"ombre\",\r\n    \"omega\",\r\n    \"onion\",\r\n    \"onset\",\r\n    \"opera\",\r\n    \"opine\",\r\n    \"opium\",\r\n    \"optic\",\r\n    \"orbit\",\r\n    \"order\",\r\n    \"organ\",\r\n    \"other\",\r\n    \"otter\",\r\n    \"ought\",\r\n    \"ounce\",\r\n    \"outdo\",\r\n    \"outer\",\r\n    \"outgo\",\r\n    \"ovary\",\r\n    \"ovate\",\r\n    \"overt\",\r\n    \"ovine\",\r\n    \"ovoid\",\r\n    \"owing\",\r\n    \"owner\",\r\n    \"oxide\",\r\n    \"ozone\",\r\n    \"paddy\",\r\n    \"pagan\",\r\n    \"paint\",\r\n    \"paler\",\r\n    \"palsy\",\r\n    \"panel\",\r\n    \"panic\",\r\n    \"pansy\",\r\n    \"papal\",\r\n    \"paper\",\r\n    \"parer\",\r\n    \"parka\",\r\n    \"parry\",\r\n    \"parse\",\r\n    \"party\",\r\n    \"pasta\",\r\n    \"paste\",\r\n    \"pasty\",\r\n    \"patch\",\r\n    \"patio\",\r\n    \"patsy\",\r\n    \"patty\",\r\n    \"pause\",\r\n    \"payee\",\r\n    \"payer\",\r\n    \"peace\",\r\n    \"peach\",\r\n    \"pearl\",\r\n    \"pecan\",\r\n    \"pedal\",\r\n    \"penal\",\r\n    \"pence\",\r\n    \"penne\",\r\n    \"penny\",\r\n    \"perch\",\r\n    \"peril\",\r\n    \"perky\",\r\n    \"pesky\",\r\n    \"pesto\",\r\n    \"petal\",\r\n    \"petty\",\r\n    \"phase\",\r\n    \"phone\",\r\n    \"phony\",\r\n    \"photo\",\r\n    \"piano\",\r\n    \"picky\",\r\n    \"piece\",\r\n    \"piety\",\r\n    \"piggy\",\r\n    \"pilot\",\r\n    \"pinch\",\r\n    \"piney\",\r\n    \"pinky\",\r\n    \"pinto\",\r\n    \"piper\",\r\n    \"pique\",\r\n    \"pitch\",\r\n    \"pithy\",\r\n    \"pivot\",\r\n    \"pixel\",\r\n    \"pixie\",\r\n    \"pizza\",\r\n    \"place\",\r\n    \"plaid\",\r\n    \"plain\",\r\n    \"plait\",\r\n    \"plane\",\r\n    \"plank\",\r\n    \"plant\",\r\n    \"plate\",\r\n    \"plaza\",\r\n    \"plead\",\r\n    \"pleat\",\r\n    \"plied\",\r\n    \"plier\",\r\n    \"pluck\",\r\n    \"plumb\",\r\n    \"plume\",\r\n    \"plump\",\r\n    \"plunk\",\r\n    \"plush\",\r\n    \"poesy\",\r\n    \"point\",\r\n    \"poise\",\r\n    \"poker\",\r\n    \"polar\",\r\n    \"polka\",\r\n    \"polyp\",\r\n    \"pooch\",\r\n    \"poppy\",\r\n    \"porch\",\r\n    \"poser\",\r\n    \"posit\",\r\n    \"posse\",\r\n    \"pouch\",\r\n    \"pound\",\r\n    \"pouty\",\r\n    \"power\",\r\n    \"prank\",\r\n    \"prawn\",\r\n    \"preen\",\r\n    \"press\",\r\n    \"price\",\r\n    \"prick\",\r\n    \"pride\",\r\n    \"pried\",\r\n    \"prime\",\r\n    \"primo\",\r\n    \"print\",\r\n    \"prior\",\r\n    \"prism\",\r\n    \"privy\",\r\n    \"prize\",\r\n    \"probe\",\r\n    \"prone\",\r\n    \"prong\",\r\n    \"proof\",\r\n    \"prose\",\r\n    \"proud\",\r\n    \"prove\",\r\n    \"prowl\",\r\n    \"proxy\",\r\n    \"prude\",\r\n    \"prune\",\r\n    \"psalm\",\r\n    \"pubic\",\r\n    \"pudgy\",\r\n    \"puffy\",\r\n    \"pulpy\",\r\n    \"pulse\",\r\n    \"punch\",\r\n    \"pupil\",\r\n    \"puppy\",\r\n    \"puree\",\r\n    \"purer\",\r\n    \"purge\",\r\n    \"purse\",\r\n    \"pushy\",\r\n    \"putty\",\r\n    \"pygmy\",\r\n    \"quack\",\r\n    \"quail\",\r\n    \"quake\",\r\n    \"qualm\",\r\n    \"quark\",\r\n    \"quart\",\r\n    \"quash\",\r\n    \"quasi\",\r\n    \"queen\",\r\n    \"queer\",\r\n    \"quell\",\r\n    \"query\",\r\n    \"quest\",\r\n    \"queue\",\r\n    \"quick\",\r\n    \"quiet\",\r\n    \"quill\",\r\n    \"quilt\",\r\n    \"quirk\",\r\n    \"quite\",\r\n    \"quota\",\r\n    \"quote\",\r\n    \"quoth\",\r\n    \"rabbi\",\r\n    \"rabid\",\r\n    \"racer\",\r\n    \"radar\",\r\n    \"radii\",\r\n    \"radio\",\r\n    \"rainy\",\r\n    \"raise\",\r\n    \"rajah\",\r\n    \"rally\",\r\n    \"ralph\",\r\n    \"ramen\",\r\n    \"ranch\",\r\n    \"randy\",\r\n    \"range\",\r\n    \"rapid\",\r\n    \"rarer\",\r\n    \"raspy\",\r\n    \"ratio\",\r\n    \"ratty\",\r\n    \"raven\",\r\n    \"rayon\",\r\n    \"razor\",\r\n    \"reach\",\r\n    \"react\",\r\n    \"ready\",\r\n    \"realm\",\r\n    \"rearm\",\r\n    \"rebar\",\r\n    \"rebel\",\r\n    \"rebus\",\r\n    \"rebut\",\r\n    \"recap\",\r\n    \"recur\",\r\n    \"recut\",\r\n    \"reedy\",\r\n    \"refer\",\r\n    \"refit\",\r\n    \"regal\",\r\n    \"rehab\",\r\n    \"reign\",\r\n    \"relax\",\r\n    \"relay\",\r\n    \"relic\",\r\n    \"remit\",\r\n    \"renal\",\r\n    \"renew\",\r\n    \"repay\",\r\n    \"repel\",\r\n    \"reply\",\r\n    \"rerun\",\r\n    \"reset\",\r\n    \"resin\",\r\n    \"retch\",\r\n    \"retro\",\r\n    \"retry\",\r\n    \"reuse\",\r\n    \"revel\",\r\n    \"revue\",\r\n    \"rhino\",\r\n    \"rhyme\",\r\n    \"rider\",\r\n    \"ridge\",\r\n    \"rifle\",\r\n    \"right\",\r\n    \"rigid\",\r\n    \"rigor\",\r\n    \"rinse\",\r\n    \"ripen\",\r\n    \"riper\",\r\n    \"risen\",\r\n    \"riser\",\r\n    \"risky\",\r\n    \"rival\",\r\n    \"river\",\r\n    \"rivet\",\r\n    \"roach\",\r\n    \"roast\",\r\n    \"robin\",\r\n    \"robot\",\r\n    \"rocky\",\r\n    \"rodeo\",\r\n    \"roger\",\r\n    \"rogue\",\r\n    \"roomy\",\r\n    \"roost\",\r\n    \"rotor\",\r\n    \"rouge\",\r\n    \"rough\",\r\n    \"round\",\r\n    \"rouse\",\r\n    \"route\",\r\n    \"rover\",\r\n    \"rowdy\",\r\n    \"rower\",\r\n    \"royal\",\r\n    \"ruddy\",\r\n    \"ruder\",\r\n    \"rugby\",\r\n    \"ruler\",\r\n    \"rumba\",\r\n    \"rumor\",\r\n    \"rupee\",\r\n    \"rural\",\r\n    \"rusty\",\r\n    \"sadly\",\r\n    \"safer\",\r\n    \"saint\",\r\n    \"salad\",\r\n    \"sally\",\r\n    \"salon\",\r\n    \"salsa\",\r\n    \"salty\",\r\n    \"salve\",\r\n    \"salvo\",\r\n    \"sandy\",\r\n    \"saner\",\r\n    \"sappy\",\r\n    \"sassy\",\r\n    \"satin\",\r\n    \"satyr\",\r\n    \"sauce\",\r\n    \"saucy\",\r\n    \"sauna\",\r\n    \"saute\",\r\n    \"savor\",\r\n    \"savoy\",\r\n    \"savvy\",\r\n    \"scald\",\r\n    \"scale\",\r\n    \"scalp\",\r\n    \"scaly\",\r\n    \"scamp\",\r\n    \"scant\",\r\n    \"scare\",\r\n    \"scarf\",\r\n    \"scary\",\r\n    \"scene\",\r\n    \"scent\",\r\n    \"scion\",\r\n    \"scoff\",\r\n    \"scold\",\r\n    \"scone\",\r\n    \"scoop\",\r\n    \"scope\",\r\n    \"score\",\r\n    \"scorn\",\r\n    \"scour\",\r\n    \"scout\",\r\n    \"scowl\",\r\n    \"scram\",\r\n    \"scrap\",\r\n    \"scree\",\r\n    \"screw\",\r\n    \"scrub\",\r\n    \"scrum\",\r\n    \"scuba\",\r\n    \"sedan\",\r\n    \"seedy\",\r\n    \"segue\",\r\n    \"seize\",\r\n    \"semen\",\r\n    \"sense\",\r\n    \"sepia\",\r\n    \"serif\",\r\n    \"serum\",\r\n    \"serve\",\r\n    \"setup\",\r\n    \"seven\",\r\n    \"sever\",\r\n    \"sewer\",\r\n    \"shack\",\r\n    \"shade\",\r\n    \"shady\",\r\n    \"shaft\",\r\n    \"shake\",\r\n    \"shaky\",\r\n    \"shale\",\r\n    \"shall\",\r\n    \"shalt\",\r\n    \"shame\",\r\n    \"shank\",\r\n    \"shape\",\r\n    \"shard\",\r\n    \"share\",\r\n    \"shark\",\r\n    \"sharp\",\r\n    \"shave\",\r\n    \"shawl\",\r\n    \"shear\",\r\n    \"sheen\",\r\n    \"sheep\",\r\n    \"sheer\",\r\n    \"sheet\",\r\n    \"sheik\",\r\n    \"shelf\",\r\n    \"shell\",\r\n    \"shied\",\r\n    \"shift\",\r\n    \"shine\",\r\n    \"shiny\",\r\n    \"shire\",\r\n    \"shirk\",\r\n    \"shirt\",\r\n    \"shoal\",\r\n    \"shock\",\r\n    \"shone\",\r\n    \"shook\",\r\n    \"shoot\",\r\n    \"shore\",\r\n    \"shorn\",\r\n    \"short\",\r\n    \"shout\",\r\n    \"shove\",\r\n    \"shown\",\r\n    \"showy\",\r\n    \"shrew\",\r\n    \"shrub\",\r\n    \"shrug\",\r\n    \"shuck\",\r\n    \"shunt\",\r\n    \"shush\",\r\n    \"shyly\",\r\n    \"siege\",\r\n    \"sieve\",\r\n    \"sight\",\r\n    \"sigma\",\r\n    \"silky\",\r\n    \"silly\",\r\n    \"since\",\r\n    \"sinew\",\r\n    \"singe\",\r\n    \"siren\",\r\n    \"sissy\",\r\n    \"sixth\",\r\n    \"sixty\",\r\n    \"skate\",\r\n    \"skier\",\r\n    \"skiff\",\r\n    \"skill\",\r\n    \"skimp\",\r\n    \"skirt\",\r\n    \"skulk\",\r\n    \"skull\",\r\n    \"skunk\",\r\n    \"slack\",\r\n    \"slain\",\r\n    \"slang\",\r\n    \"slant\",\r\n    \"slash\",\r\n    \"slate\",\r\n    \"sleek\",\r\n    \"sleep\",\r\n    \"sleet\",\r\n    \"slept\",\r\n    \"slice\",\r\n    \"slick\",\r\n    \"slide\",\r\n    \"slime\",\r\n    \"slimy\",\r\n    \"sling\",\r\n    \"slink\",\r\n    \"sloop\",\r\n    \"slope\",\r\n    \"slosh\",\r\n    \"sloth\",\r\n    \"slump\",\r\n    \"slung\",\r\n    \"slunk\",\r\n    \"slurp\",\r\n    \"slush\",\r\n    \"slyly\",\r\n    \"smack\",\r\n    \"small\",\r\n    \"smart\",\r\n    \"smash\",\r\n    \"smear\",\r\n    \"smell\",\r\n    \"smelt\",\r\n    \"smile\",\r\n    \"smirk\",\r\n    \"smite\",\r\n    \"smith\",\r\n    \"smock\",\r\n    \"smoke\",\r\n    \"smoky\",\r\n    \"smote\",\r\n    \"snack\",\r\n    \"snail\",\r\n    \"snake\",\r\n    \"snaky\",\r\n    \"snare\",\r\n    \"snarl\",\r\n    \"sneak\",\r\n    \"sneer\",\r\n    \"snide\",\r\n    \"sniff\",\r\n    \"snipe\",\r\n    \"snoop\",\r\n    \"snore\",\r\n    \"snort\",\r\n    \"snout\",\r\n    \"snowy\",\r\n    \"snuck\",\r\n    \"snuff\",\r\n    \"soapy\",\r\n    \"sober\",\r\n    \"soggy\",\r\n    \"solar\",\r\n    \"solid\",\r\n    \"solve\",\r\n    \"sonar\",\r\n    \"sonic\",\r\n    \"sooth\",\r\n    \"sooty\",\r\n    \"sorry\",\r\n    \"sound\",\r\n    \"south\",\r\n    \"sower\",\r\n    \"space\",\r\n    \"spade\",\r\n    \"spank\",\r\n    \"spare\",\r\n    \"spark\",\r\n    \"spasm\",\r\n    \"spawn\",\r\n    \"speak\",\r\n    \"spear\",\r\n    \"speck\",\r\n    \"speed\",\r\n    \"spell\",\r\n    \"spelt\",\r\n    \"spend\",\r\n    \"spent\",\r\n    \"sperm\",\r\n    \"spice\",\r\n    \"spicy\",\r\n    \"spied\",\r\n    \"spiel\",\r\n    \"spike\",\r\n    \"spiky\",\r\n    \"spill\",\r\n    \"spilt\",\r\n    \"spine\",\r\n    \"spiny\",\r\n    \"spire\",\r\n    \"spite\",\r\n    \"splat\",\r\n    \"split\",\r\n    \"spoil\",\r\n    \"spoke\",\r\n    \"spoof\",\r\n    \"spook\",\r\n    \"spool\",\r\n    \"spoon\",\r\n    \"spore\",\r\n    \"sport\",\r\n    \"spout\",\r\n    \"spray\",\r\n    \"spree\",\r\n    \"sprig\",\r\n    \"spunk\",\r\n    \"spurn\",\r\n    \"spurt\",\r\n    \"squad\",\r\n    \"squat\",\r\n    \"squib\",\r\n    \"stack\",\r\n    \"staff\",\r\n    \"stage\",\r\n    \"staid\",\r\n    \"stain\",\r\n    \"stair\",\r\n    \"stake\",\r\n    \"stale\",\r\n    \"stalk\",\r\n    \"stall\",\r\n    \"stamp\",\r\n    \"stand\",\r\n    \"stank\",\r\n    \"stare\",\r\n    \"stark\",\r\n    \"start\",\r\n    \"stash\",\r\n    \"state\",\r\n    \"stave\",\r\n    \"stead\",\r\n    \"steak\",\r\n    \"steal\",\r\n    \"steam\",\r\n    \"steed\",\r\n    \"steel\",\r\n    \"steep\",\r\n    \"steer\",\r\n    \"stein\",\r\n    \"stern\",\r\n    \"stick\",\r\n    \"stiff\",\r\n    \"still\",\r\n    \"stilt\",\r\n    \"sting\",\r\n    \"stink\",\r\n    \"stint\",\r\n    \"stock\",\r\n    \"stoic\",\r\n    \"stoke\",\r\n    \"stole\",\r\n    \"stomp\",\r\n    \"stone\",\r\n    \"stony\",\r\n    \"stood\",\r\n    \"stool\",\r\n    \"stoop\",\r\n    \"store\",\r\n    \"stork\",\r\n    \"storm\",\r\n    \"story\",\r\n    \"stout\",\r\n    \"stove\",\r\n    \"strap\",\r\n    \"straw\",\r\n    \"stray\",\r\n    \"strip\",\r\n    \"strut\",\r\n    \"stuck\",\r\n    \"study\",\r\n    \"stuff\",\r\n    \"stump\",\r\n    \"stung\",\r\n    \"stunk\",\r\n    \"stunt\",\r\n    \"style\",\r\n    \"suave\",\r\n    \"sugar\",\r\n    \"suing\",\r\n    \"suite\",\r\n    \"sulky\",\r\n    \"sully\",\r\n    \"sumac\",\r\n    \"sunny\",\r\n    \"super\",\r\n    \"surer\",\r\n    \"surge\",\r\n    \"surly\",\r\n    \"sushi\",\r\n    \"swami\",\r\n    \"swamp\",\r\n    \"swarm\",\r\n    \"swash\",\r\n    \"swath\",\r\n    \"swear\",\r\n    \"sweat\",\r\n    \"sweep\",\r\n    \"sweet\",\r\n    \"swell\",\r\n    \"swept\",\r\n    \"swift\",\r\n    \"swill\",\r\n    \"swine\",\r\n    \"swing\",\r\n    \"swirl\",\r\n    \"swish\",\r\n    \"swoon\",\r\n    \"swoop\",\r\n    \"sword\",\r\n    \"swore\",\r\n    \"sworn\",\r\n    \"swung\",\r\n    \"synod\",\r\n    \"syrup\",\r\n    \"tabby\",\r\n    \"table\",\r\n    \"taboo\",\r\n    \"tacit\",\r\n    \"tacky\",\r\n    \"taffy\",\r\n    \"taint\",\r\n    \"taken\",\r\n    \"taker\",\r\n    \"tally\",\r\n    \"talon\",\r\n    \"tamer\",\r\n    \"tango\",\r\n    \"tangy\",\r\n    \"taper\",\r\n    \"tapir\",\r\n    \"tardy\",\r\n    \"tarot\",\r\n    \"taste\",\r\n    \"tasty\",\r\n    \"tatty\",\r\n    \"taunt\",\r\n    \"tawny\",\r\n    \"teach\",\r\n    \"teary\",\r\n    \"tease\",\r\n    \"teddy\",\r\n    \"teeth\",\r\n    \"tempo\",\r\n    \"tenet\",\r\n    \"tenor\",\r\n    \"tense\",\r\n    \"tenth\",\r\n    \"tepee\",\r\n    \"tepid\",\r\n    \"terra\",\r\n    \"terse\",\r\n    \"testy\",\r\n    \"thank\",\r\n    \"theft\",\r\n    \"their\",\r\n    \"theme\",\r\n    \"there\",\r\n    \"these\",\r\n    \"theta\",\r\n    \"thick\",\r\n    \"thief\",\r\n    \"thigh\",\r\n    \"thing\",\r\n    \"think\",\r\n    \"third\",\r\n    \"thong\",\r\n    \"thorn\",\r\n    \"those\",\r\n    \"three\",\r\n    \"threw\",\r\n    \"throb\",\r\n    \"throw\",\r\n    \"thrum\",\r\n    \"thumb\",\r\n    \"thump\",\r\n    \"thyme\",\r\n    \"tiara\",\r\n    \"tibia\",\r\n    \"tidal\",\r\n    \"tiger\",\r\n    \"tight\",\r\n    \"tilde\",\r\n    \"timer\",\r\n    \"timid\",\r\n    \"tipsy\",\r\n    \"titan\",\r\n    \"tithe\",\r\n    \"title\",\r\n    \"toast\",\r\n    \"today\",\r\n    \"toddy\",\r\n    \"token\",\r\n    \"tonal\",\r\n    \"tonga\",\r\n    \"tonic\",\r\n    \"tooth\",\r\n    \"topaz\",\r\n    \"topic\",\r\n    \"torch\",\r\n    \"torso\",\r\n    \"torus\",\r\n    \"total\",\r\n    \"totem\",\r\n    \"touch\",\r\n    \"tough\",\r\n    \"towel\",\r\n    \"tower\",\r\n    \"toxic\",\r\n    \"toxin\",\r\n    \"trace\",\r\n    \"track\",\r\n    \"tract\",\r\n    \"trade\",\r\n    \"trail\",\r\n    \"train\",\r\n    \"trait\",\r\n    \"tramp\",\r\n    \"trash\",\r\n    \"trawl\",\r\n    \"tread\",\r\n    \"treat\",\r\n    \"trend\",\r\n    \"triad\",\r\n    \"trial\",\r\n    \"tribe\",\r\n    \"trice\",\r\n    \"trick\",\r\n    \"tried\",\r\n    \"tripe\",\r\n    \"trite\",\r\n    \"troll\",\r\n    \"troop\",\r\n    \"trope\",\r\n    \"trout\",\r\n    \"trove\",\r\n    \"truce\",\r\n    \"truck\",\r\n    \"truer\",\r\n    \"truly\",\r\n    \"trump\",\r\n    \"trunk\",\r\n    \"truss\",\r\n    \"trust\",\r\n    \"truth\",\r\n    \"tryst\",\r\n    \"tubal\",\r\n    \"tuber\",\r\n    \"tulip\",\r\n    \"tulle\",\r\n    \"tumor\",\r\n    \"tunic\",\r\n    \"turbo\",\r\n    \"tutor\",\r\n    \"twang\",\r\n    \"tweak\",\r\n    \"tweed\",\r\n    \"tweet\",\r\n    \"twice\",\r\n    \"twine\",\r\n    \"twirl\",\r\n    \"twist\",\r\n    \"twixt\",\r\n    \"tying\",\r\n    \"udder\",\r\n    \"ulcer\",\r\n    \"ultra\",\r\n    \"umbra\",\r\n    \"uncle\",\r\n    \"uncut\",\r\n    \"under\",\r\n    \"undid\",\r\n    \"undue\",\r\n    \"unfed\",\r\n    \"unfit\",\r\n    \"unify\",\r\n    \"union\",\r\n    \"unite\",\r\n    \"unity\",\r\n    \"unlit\",\r\n    \"unmet\",\r\n    \"unset\",\r\n    \"untie\",\r\n    \"until\",\r\n    \"unwed\",\r\n    \"unzip\",\r\n    \"upper\",\r\n    \"upset\",\r\n    \"urban\",\r\n    \"urine\",\r\n    \"usage\",\r\n    \"usher\",\r\n    \"using\",\r\n    \"usual\",\r\n    \"usurp\",\r\n    \"utile\",\r\n    \"utter\",\r\n    \"vague\",\r\n    \"valet\",\r\n    \"valid\",\r\n    \"valor\",\r\n    \"value\",\r\n    \"valve\",\r\n    \"vapid\",\r\n    \"vapor\",\r\n    \"vault\",\r\n    \"vaunt\",\r\n    \"vegan\",\r\n    \"venom\",\r\n    \"venue\",\r\n    \"verge\",\r\n    \"verse\",\r\n    \"verso\",\r\n    \"verve\",\r\n    \"vicar\",\r\n    \"video\",\r\n    \"vigil\",\r\n    \"vigor\",\r\n    \"villa\",\r\n    \"vinyl\",\r\n    \"viola\",\r\n    \"viper\",\r\n    \"viral\",\r\n    \"virus\",\r\n    \"visit\",\r\n    \"visor\",\r\n    \"vista\",\r\n    \"vital\",\r\n    \"vivid\",\r\n    \"vixen\",\r\n    \"vocal\",\r\n    \"vodka\",\r\n    \"vogue\",\r\n    \"voice\",\r\n    \"voila\",\r\n    \"vomit\",\r\n    \"voter\",\r\n    \"vouch\",\r\n    \"vowel\",\r\n    \"vying\",\r\n    \"wacky\",\r\n    \"wafer\",\r\n    \"wager\",\r\n    \"wagon\",\r\n    \"waist\",\r\n    \"waive\",\r\n    \"waltz\",\r\n    \"warty\",\r\n    \"waste\",\r\n    \"watch\",\r\n    \"water\",\r\n    \"waver\",\r\n    \"waxen\",\r\n    \"weary\",\r\n    \"weave\",\r\n    \"wedge\",\r\n    \"weedy\",\r\n    \"weigh\",\r\n    \"weird\",\r\n    \"welch\",\r\n    \"welsh\",\r\n    \"whack\",\r\n    \"whale\",\r\n    \"wharf\",\r\n    \"wheat\",\r\n    \"wheel\",\r\n    \"whelp\",\r\n    \"where\",\r\n    \"which\",\r\n    \"whiff\",\r\n    \"while\",\r\n    \"whine\",\r\n    \"whiny\",\r\n    \"whirl\",\r\n    \"whisk\",\r\n    \"white\",\r\n    \"whole\",\r\n    \"whoop\",\r\n    \"whose\",\r\n    \"widen\",\r\n    \"wider\",\r\n    \"widow\",\r\n    \"width\",\r\n    \"wield\",\r\n    \"wight\",\r\n    \"willy\",\r\n    \"wimpy\",\r\n    \"wince\",\r\n    \"winch\",\r\n    \"windy\",\r\n    \"wiser\",\r\n    \"wispy\",\r\n    \"witch\",\r\n    \"witty\",\r\n    \"woken\",\r\n    \"woman\",\r\n    \"women\",\r\n    \"woody\",\r\n    \"wooer\",\r\n    \"wooly\",\r\n    \"woozy\",\r\n    \"wordy\",\r\n    \"world\",\r\n    \"worry\",\r\n    \"worse\",\r\n    \"worst\",\r\n    \"worth\",\r\n    \"would\",\r\n    \"wound\",\r\n    \"woven\",\r\n    \"wrack\",\r\n    \"wrath\",\r\n    \"wreak\",\r\n    \"wreck\",\r\n    \"wrest\",\r\n    \"wring\",\r\n    \"wrist\",\r\n    \"write\",\r\n    \"wrong\",\r\n    \"wrote\",\r\n    \"wrung\",\r\n    \"wryly\",\r\n    \"yacht\",\r\n    \"yearn\",\r\n    \"yeast\",\r\n    \"yield\",\r\n    \"young\",\r\n    \"youth\",\r\n    \"zebra\",\r\n    \"zesty\",\r\n    \"zonal\"\r\n    \r\n]","<script lang=\"ts\">\n\timport { Filters } from './Filters';\n\timport { onMount } from 'Svelte';\n\n\timport { wordsLengthFive } from './wordsLengthFive'\n\n\tlet words: string[] = wordsLengthFive;\n\tlet filteredWords: string[] = words;\n\tlet displayedWords: string[];\n\n\tlet wordLength = 5;\n\tlet nrOfRows = 6;\n\n\tlet letters: string[][] = Array(nrOfRows).fill([]).map(() => Array(wordLength).fill(\"\"));\n\tlet filters: Function[][] = Array(nrOfRows).fill([]).map(() => Array(wordLength).fill(Filters.noFilter));;\n\n   \t// onMount(async () => {\n    //     // const response = await fetch(\"https://github.com/mrtnnrdlnd/wurdalurd/blob/main/public/words.json\");\n\t// \tconst response = await fetch(\"words.json\");\n    //     words = await response.json() as string[];\n\t// \tfilteredWords = words;\n\t// });\n\n\tfunction toggleFilter(row, column) {\n\t\tlet backgroundColor = \"\";\n\t\tif (filters[row][column] == Filters.noFilter) {\n\t\t\tfilters[row][column] = Filters.notInWord;\n\t\t\tbackgroundColor = \"lightgray\";\n\t\t}\n\t\telse if (filters[row][column] == Filters.notInWord) {\n\t\t\tfilters[row][column] = Filters.wrongPosition;\n\t\t\tbackgroundColor = \"orange\";\n\t\t}\n\t\telse if (filters[row][column] == Filters.wrongPosition) {\n\t\t\tfilters[row][column] = Filters.rightPosition;\n\t\t\tbackgroundColor = \"lightgreen\";\n\t\t}\n\t\telse {\n\t\t\tfilters[row][column] = Filters.noFilter\n\t\t}\n\t\tdocument.getElementById(row.toString().concat(column)).style.backgroundColor = backgroundColor;\n\t}\n\n\n\n\t$: {\n\t\tfilteredWords = words.filter((w) => {\n\t\t\tfor (let row = 0; row < nrOfRows; row++) {\n\t\t\t\tfor (let column = 0; column < wordLength; column++) {\n\t\t\t\t\tif (letters[row][column] != \"\" && !filters[row][column](w, letters[row][column].toLocaleLowerCase(), column)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\t\n\n\t}\n\n\t$: {\n\t\tif (filteredWords.length > 0 && filteredWords.length <= 5) {\n\t\t\tdisplayedWords = [...ratedWords(filteredWords, rateAlphabet(filteredWords)).keys()].slice(0, 10)\n\t\t}\n\t\telse if (filteredWords.length > 5) {\n\t\t\tdisplayedWords = [...ratedWords(words, rateAlphabet(filteredWords)).keys()].slice(0, 10)\n\t\t}\n\t}\n\n\t// function findMostFilteringWord(fromWords: string[], inWords:string[]) {\n\t// \tlet filterScore: number = fromWords.length;\n\t// \tlet indexOfMostFilteringWord: number = 0;\n\t// \tlet wordLength = fromWords[0].length;\n\n\t// \tfromWords.forEach((word, i) => {\n\t// \t\tlet filteredInWordsSize = inWords.filter((w) => {\n\t// \t\t\tfor (let column = 0; column < wordLength; column++) {\n\t// \t\t\t\tif (w.includes(word.charAt(column))) {\n\t// \t\t\t\t\treturn false;\n\t// \t\t\t\t}\n\t// \t\t\t} \n\t// \t\t\treturn true\n\t// \t\t}).length;\n\n\t// \t\tif (filteredInWordsSize > 0 && filterScore > filteredInWordsSize) {\n\t// \t\t\tconsole.log(filteredInWordsSize)\n\t// \t\t\tfilterScore = filteredInWordsSize;\n\t// \t\t\tindexOfMostFilteringWord = i;\n\t// \t\t}\n\t// \t})\n\n\t// \treturn fromWords[indexOfMostFilteringWord];\n\t// }\n\n\tconst alphabet: string[] = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n\t\n\tfunction rateAlphabet(words: string[]): Map<string, number[]> {\n\t\t// const alphabet: string[] = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n\t\tconst wordLength = words[0].length;\n\t\tconst totalNrOfWords = words.length;\n\n\t\tlet ratedAlphabet: Map<string, number[]> = new Map();\n\n\t\tfor (const letter of alphabet) {\n\t\t\tlet rating: number[] = new Array(wordLength + 1);\n\t\t\trating[wordLength] = words.filter((w) => w.includes(letter)).length;\n\t\t\tfor (let i = 0; i < wordLength; i++) {\n\t\t\t\trating[i] = Math.pow(words.filter((w) => Filters.rightPosition(w, letter, i)).length, 2);\n\t\t\t\trating[i] += Math.pow(words.filter((w) => Filters.wrongPosition(w, letter, i)).length, 2);\n\t\t\t\trating[i] += Math.pow(words.filter((w) => Filters.notInWord(w, letter, i)).length, 2);\n\t\t\t\trating[i] /= totalNrOfWords;\n\t\t\t}\n\n\t\t\tratedAlphabet.set(letter, rating);\n\t\t}\n\n\t\treturn ratedAlphabet;\n\t}\n\n\tfunction ratedWords(words: string[], ratedAlphabet: Map<string, number[]>): Map<string, number> {\n\t\tlet ratedWords: Map<string, number> = new Map();\n\t\tlet sum: number;\n\n\t\twords.forEach((word) => {\n\t\t\tsum = 0;\n\t\t\tword.split(\"\").forEach((letter, i) => {\n\t\t\t\tsum += ratedAlphabet.get(letter)[i];\n\t\t\t\t\n\t\t\t\tif (word.split(letter).length > 2) {\n\t\t\t\t\tsum += 5000;\n\t\t\t\t}\n\t\t\t})\n\t\t\tratedWords.set(word, sum)\n\t\t})\n\n\t\treturn new Map([...ratedWords.entries()].sort((a, b) => a[1] - b[1]))\n\t}\n\n\tfunction handleInput(e: Event, i, j) {\n\t\tlet inputEvent = e as InputEvent;\n\t\tif (inputEvent.data == null) {\n\t\t\tfilters[i][j] = Filters.noFilter\n\t\t\tdocument.getElementById(i.toString().concat(j)).style.backgroundColor = \"\";\n\t\t}\n\t\telse if (alphabet.includes(inputEvent.data.toLocaleLowerCase())) {\n\t\t\tfocusNext(i,j);\n\t\t}\n\t\t\n\t}\n\n\tfunction focusNext(i, j) {\n\t\tif (j < wordLength - 1) {\n\t\t\tdocument.getElementById((i).toString().concat((j + 1).toString())).focus();\n\t\t}\n\t\telse {\n\t\t\tdocument.getElementById((i + 1).toString().concat((0).toString())).focus();\n\t\t}\n\t\t\n\t}\n\n</script>\n\n<main>\n\t{#each letters as row, i}\n\t\t<div class=\"row\">\n\t\t\t{#each row as letter, j}\n\t\t\t\t<input \n\t\t\t\t\tid=\"{i.toString().concat(j.toString())}\" \n\t\t\t\t\tmaxlength=\"1\" \n\t\t\t\t\tclass=\"letterbox\" \n\t\t\t\t\tbind:value=\"{letters[i][j]}\" \n\t\t\t\t\ton:click=\"{() => toggleFilter(i,j)}\"\n\t\t\t\t\ton:input=\"{(e) => handleInput(e, i ,j)}\">\n\t\t\t{/each}\n\t\t</div>\n\t\t<br>\n\t{/each}\n\n\t{#if filteredWords && filteredWords.length > 0}\n\t\t<span>{filteredWords.length}</span><br>\n\t\t{#each displayedWords as word}\n\t\t\t<br>\n\t\t\t<div class=\"row\">\n\t\t\t{#each word as letter}\n\t\t\t\t<div class=\"letterbox\">{letter}</div>\n\t\t\t{/each}\n\t\t\t</div>\n\t\t\t\n\t\t{/each}\n\t{/if}\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 0px auto;\n\t\twidth: 320px;\t\n\t}\n\t.row {\n\t\tdisplay:inline-flex;\n\t}\n\t.letterbox {\n\t\tfloat:left;\n\t\tbox-sizing: border-box;\n\t\tpadding: 2px;\n\t\tmargin: 0px 5px 5px 0px;\n\t\tborder: 1px solid #ccc;\n\t\tborder-radius: 3px;\n\t\twidth: 60px;\n\t\theight: 60px;\n\t\ttext-align: center;\n\t\t/* vertical-align:middle; */\n\t\tfont-size: 36px;\n\t}\n\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t}\n});\n\nexport default app;"],"names":[],"mappings":"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"}